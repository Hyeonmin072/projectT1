plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	//querydsl 추가
	//id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.gamesnap'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok:1.18.22'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.h2database:h2'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//S3의존성
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}
//
////querydsl 추가
//def querydslDir = "$buildDir/generated/querydsl"
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//
//sourceSets {
//	main.java.srcDir querydslDir
//}
//
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}
//
//
//compileQuerydsl.doFirst {
//	if(file(querydslDir).exists() )
//		delete(file(querydslDir))
//}

// Querydsl 설정
def querydslDir = "$buildDir/generated/sources/annotationProcessor/java/main"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// 불필요한 설정 제거
// querydsl {} 블록 제거
// configurations { querydsl } 블록 제거
// compileQuerydsl 태스크 제거

// clean 태스크만 유지
clean {
	delete file(querydslDir)
}